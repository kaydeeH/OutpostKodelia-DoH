#config_version=5

hardware:
  platform: opp
  driverboards: gen2
  lights: fadecandy

# COBRAPIN lights get numbers 0-0-0 to 0-0-255 and 1-0-0 to 1-0-255
# they may also need a platform override? doc seems to indicate no.
#
# FADECANDY lights get numbers 0 .. 511
# Connector 0 - 0..63
# Connector 1 - 64..127
# Connector 2 - 128..191
# Connector 3 - 192..255
# Connector 4 - 256..319
# Connector 5 - 320..383
# Connector 6 - 384..477
# Connector 7 - 448..511
#
# OR
# by assigning OSC channels
#
# Connector 0 - 0-0 .. 0-63
# Connector 1 - 1-0 .. 0-63
# Connector 2 - 2-0 .. 0-63
# Connector 3 - 3-0 .. 0-63
# Connector 4 - 4-0 .. 0-63
# Connector 5 - 5-0 .. 0-63
# Connector 6 - 6-0 .. 0-63
# Connector 7 - 7-0 .. 0-63


opp:
  #Use the USB ports defined by your OS for the two STM32 boards
  ports: /dev/ttyACM0, /dev/ttyACM1
  #USING SERIAL NUMBERS INSTEAD OF CHAINS
  #  Board 0 has serial number 0, Board 1 has serial number 1.
  #  This is convenient if your OS tends to reassign the serial port.
  #  MPF will automatically address the correct board even if the ports
  #     are swapped.

  #For multiple CobraPin boards in a game, you will either have to give
  #  the STM32 boards on the second CobraPin board new serial numbers
  #  (10 and 11 are suggested for the 2nd board since 2 is used by the
  #  CobraPin Xpansion Board)
  #  <OR> Use the chains section to assign a port to a board number.
  #  Mixing these up could cause blown FETs, coils, and fuses. Proceed
  #  with caution. Test without coil power and use the yellow coil LEDs
  #  for feedback.
  #chains:
     #0: /dev/ttyACM0
     #1: /dev/ttyACM1

fadecandy:
  linear_cutoff: 0.004
  whitepoint: 0.97, 0.95, 1.0
  linear_slope: 1.0

psus:
  default:
    #Gives the capacitors extra time to recharge after firing a coil
    #  and eases the load on the power supply. Doesn't affect autofire
    #  devices like flippers, pops, slings.
    release_wait_ms: 50

playfields:
  playfield:
    default_source_device: bd_plunger
    tags: default

#    enable_ball_search: true
#    ball_search_timeout: 20s
#    ball_search_wait_after_iteration: 10s
#    ball_search_interval: 250ms

# THIS MAY BE INCORRECT --
# The flippers: section of the config is only used for controlled flippers in newer machines. Early solid-state (pre-WPC) machines used enable relays to enable the flippers, and those are configured elsewhere. (See the How To guides for details.)

flippers:
  left_flipper:
    main_coil: c_flipper_left_main
    activation_switch: s_flipper_left
    debug: true
    enable_events: ball_started, enable_playfield_coils
    disable_events: ball_will_end, service_mode_entered, disable_playfield_coils
  left_flipper_upper:
    main_coil: c_flipper_left_upper
    activation_switch: s_flipper_left
    debug: true
    enable_events: ball_started, enable_playfield_coils
    disable_events: ball_will_end, service_mode_entered, disable_playfield_coils
  right_flipper:
    main_coil: c_flipper_right_main
    activation_switch: s_flipper_right
    debug: true
    enable_events: ball_started, enable_playfield_coils
    disable_events: ball_will_end, service_mode_entered, disable_playfield_coils
  right_flipper_upper:
    main_coil: c_flipper_right_upper
    activation_switch: s_flipper_right
    debug: true
    enable_events: ball_started, enable_playfield_coils
    disable_events: ball_will_end, service_mode_entered, disable_playfield_coils


ball_devices:
  bd_trough:
    ball_switches: s_trough_1, s_trough_2, s_trough_3, s_trough_4, s_trough_jam
    eject_coil: c_ball_trough
    tags: trough, drain, home
    jam_switch: s_trough_jam
    eject_targets: bd_plunger
    eject_timeouts: 3s
  bd_plunger:
    ball_switches: s_shooter_lane
    mechanical_eject: true
    eject_timeouts: 2s
    player_controlled_eject_event: s_shooter_lane_active{multiballs.creek_multiball == true}
    eject_coil: c_auto_plunge
  bd_drain:
    ball_switches: s_outhole
    eject_coil: c_outhole_kicker
    eject_timeouts: 1s
#    eject_targets: bd_trough
  bd_escape_saucer:
    ball_switches: s_saucer_treasure_chamber
    eject_coil: c_saucer_trasure_chamber
    eject_events: zzz_none, chase_multiball_qualified
#    eject_timeouts: 500ms, 1s, 2s, 4s
#    auto_fire_on_unexpected_ball: false
    debug: true
  bd_river_saucer:
    ball_switches: s_saucer_golden_cliffs
    eject_coil: c_saucer_golden_cliffs
    eject_timeouts: 500ms, 1s, 2s, 4s
  bd_hazzard_saucer:
    ball_switches: s_saucer_paragon
    eject_coil: c_saucer_paragon
    eject_timeouts: 500ms, 1s, 2s, 4s






drop_targets:
     I0:
         switch: s_drop_inline_a
         knockdown_coil: c_inline_knockdown_a
         knockdown_events: knockdown_drop_a
     I1:
         switch: s_drop_inline_b
         knockdown_coil: c_inline_knockdown_b
         knockdown_events: knockdown_drop_b
     I2:
         switch: s_drop_inline_c
         knockdown_coil: c_inline_knockdown_c
         knockdown_events: knockdown_drop_c
     I3:
         switch: s_drop_inline_d
         knockdown_coil: c_inline_knockdown_d
         knockdown_events: knockdown_drop_d
     R0:
         switch: s_drop_right_a
     R1:
         switch: s_drop_right_b
     R2:
         switch: s_drop_right_c

drop_target_banks:
     dtbank_inline:
         drop_targets: I0, I1, I2, I3
         reset_coils: c_drop_target_inline
#         reset_on_complete: 500ms
         ignore_switch_ms: 200ms
         reset_events:
           player_turn_will_start, drops_inline_reset
     dtbank_right:
         drop_targets: R0, R1, R2
         reset_coils: c_drop_target_right
         reset_on_complete: 500ms
         ignore_switch_ms: 200ms
         reset_events:
           player_turn_will_start, drops_right_reset

virtual_platform_start_active_switches:
  - s_trough_1
  - s_trough_2
  - s_trough_3
  - s_trough_4